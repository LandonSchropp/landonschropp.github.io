{"version":3,"file":"component---src-pages-articles-article-slug-jsx-6f7a4fa921896435baa0.js","mappings":"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","sources":["webpack://landonschropp.com/./node_modules/@babel/runtime/helpers/construct.js","webpack://landonschropp.com/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://landonschropp.com/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://landonschropp.com/./node_modules/gatsby-plugin-mdx/index.js","webpack://landonschropp.com/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://landonschropp.com/./src/data/prop-types.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/isDate/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/toDate/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/isValid/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/format/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/constants/index.js","webpack://landonschropp.com/./node_modules/date-fns/esm/parseISO/index.js","webpack://landonschropp.com/./src/components/article.jsx","webpack://landonschropp.com/./src/pages/articles/{article.slug}.jsx"],"sourcesContent":["var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import PropTypes from \"prop-types\";\n\nimport { CATEGORIES, MEDIA } from \"./constants\";\n\nfunction validateDateString(props, propName) {\n  if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(props[propName])) {\n    return new Error(\n      `${ propName }'s value '${ props[propName] }' is not a valid ISO date string ('YYYY-MM-DD').`\n    );\n  }\n}\n\nexport const NotePropType = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  authors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  date: validateDateString,\n  category: PropTypes.oneOf(CATEGORIES),\n  media: PropTypes.oneOf(MEDIA),\n  source: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  published: PropTypes.bool.isRequired\n});\n\nexport const ArticlePropType = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  date: validateDateString,\n  description: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  publisher: PropTypes.string,\n  published: PropTypes.bool.isRequired\n});\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // TODO: Remove String()\n\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both\n\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import { format, parseISO } from \"date-fns\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { ArticlePropType } from \"../data/prop-types\";\n\nexport function Article({ article, content }) {\n  return <article className=\"article\">\n    <header className=\"header\">\n      <h1 className=\"header__header\">\n        { article.title }\n      </h1>\n      <div className=\"header__subhead\" data-test-id=\"subhead\">\n        <span rel=\"author\">Landon Schropp</span>\n        { \" \" }\n        •\n        { \" \" }\n        <time dateTime={ article.date }>{ format(parseISO(article.date), \"PPP\") }</time>\n\n      </div>\n    </header>\n\n    <MDXRenderer>\n      { content }\n    </MDXRenderer>\n  </article>;\n}\n\nArticle.propTypes = {\n  article: ArticlePropType.isRequired,\n  content: PropTypes.string.isRequired\n};\n","import { graphql } from \"gatsby\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { Article } from \"../../components/article\";\nimport { Layout } from \"../../layout/layout\";\n\n// NOTE: I'm using $slug here instead of ID because the transformed article node is no longer tied\n// to the MDX node.\nexport const query = graphql`\n  query Article($slug: String) {\n    mdx(frontmatter: {Slug: {eq: $slug}}) {\n      body\n    }\n    article(slug: {eq: $slug}) {\n      title\n      slug\n      date\n      description\n      url\n      publisher\n      published\n    }\n  }\n`;\n\n// HACK: This uses the deferral API to prevent articles from being statically generated. Since this\n// site is not hosted with a Gatsby server, this prevents the pages from ever being generated.\nexport async function config() {\n  const { data } = graphql`\n    query ArticleUrls {\n      allArticle {\n        nodes {\n          slug\n          url\n        }\n      }\n    }\n  `;\n\n  return ({ params: { slug } }) => {\n    let url = _.find(data.allArticle.nodes, { slug })?.url;\n    return { defer: !_.isNil(url) };\n  };\n}\n\nexport default function ArticlePage({ data }) {\n  return <Layout\n    title={ `Landon Schropp - ${ data.article.title }` }\n    description={ data.article.description }\n  >\n    <Article article={ data.article } content={ data.mdx.body } />\n  </Layout>;\n}\n\nArticlePage.propTypes = {\n  data: PropTypes.object\n};\n"],"names":["setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","module","exports","Reflect","construct","__esModule","a","push","apply","instance","Function","bind","prototype","arguments","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","fn","validateDateString","propName","test","Error","NotePropType","PropTypes","title","slug","authors","isRequired","date","category","CATEGORIES","media","MEDIA","source","url","published","description","publisher","requiredArgs","required","length","TypeError","isDate","Date","toString","toDate","argument","argStr","getTime","console","warn","stack","NaN","isValid","dirtyDate","isNaN","Number","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","count","options","result","tokenValue","replace","addSuffix","comparison","buildFormatLongFn","undefined","width","String","defaultWidth","format","formats","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","argumentCallback","ordinalNumber","dirtyNumber","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","findIndex","pattern","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","parsePattern","parseInt","parseResult","any","index","code","formatDistance","formatLong","formatRelative","localize","weekStartsOn","firstWeekContainsDate","toInteger","Math","ceil","floor","addMilliseconds","dirtyAmount","timestamp","amount","subMilliseconds","MILLISECONDS_IN_DAY","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","addLeadingZeros","targetLength","sign","output","abs","y","signedYear","M","getUTCMonth","d","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","dayPeriodEnum","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","originalDate","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","timeLongFormatter","longFormatters","p","P","dateTimeFormat","datePattern","timePattern","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","cleanEscapedString","millisecondsInHour","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","splitDateString","dateString","timeString","dateStrings","split","substr","exec","parseYear","additionalDigits","regex","RegExp","captures","restDateString","century","parseDate","isWeekDate","parseDateUnit","_year","validateWeekDate","isoWeekYear","fourthOfJanuaryDay","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","parseTime","parseTimeUnit","seconds","validateTime","parseFloat","parseTimezone","timezoneString","_hours","validateTimezone","Article","article","content","className","rel","dirtyFormatStr","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parseYearResult","setFullYear","setHours","parseISO","ArticlePage","data","body"],"sourceRoot":""}