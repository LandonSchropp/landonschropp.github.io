{"version":3,"file":"component---src-pages-notes-note-slug-jsx-ac929472e694ed6b0f9f.js","mappings":"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","sources":["webpack://landonschropp.com/./src/data/prop-types.js","webpack://landonschropp.com/./src/components/note-header.jsx","webpack://landonschropp.com/./src/components/note.jsx","webpack://landonschropp.com/./src/pages/notes/{note.slug}.jsx"],"sourcesContent":["import { validateDateString } from \"landon-schropp-gatsby-theme\";\nimport PropTypes from \"prop-types\";\n\nimport { CATEGORIES, MEDIA } from \"./constants\";\n\nexport const NotePropType = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  authors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  date: validateDateString,\n  category: PropTypes.oneOf(CATEGORIES),\n  media: PropTypes.oneOf(MEDIA),\n  source: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  published: PropTypes.bool.isRequired\n});\n\nexport const ArticlePropType = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  date: validateDateString,\n  description: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  publisher: PropTypes.string,\n  published: PropTypes.bool.isRequired\n});\n","import { baseURL, Header, Listify } from \"landon-schropp-gatsby-theme\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport {\n  ARTICLE_MEDIA,\n  LIVE_TALK_MEDIA,\n  OTHER_MEDIA,\n  PODCAST_MEDIA\n} from \"../data/constants\";\nimport { NotePropType } from \"../data/prop-types\";\n\nfunction NoteByline({ note, sourceText, authorText, sourceFirst }) {\n  if (note.title === note.source && note.authors.length === 1 && note.authors[0] === note.title) {\n    return null;\n  }\n\n  let source = <a className=\"header__link\" href={ baseURL(note.url) }>{ note.source }</a>;\n  let authors = <Listify items={ note.authors } />;\n\n  if (note.authors.length === 1 && note.authors[0] === note.source) {\n    return <>{ sourceText } { source }</>;\n  }\n\n  if (note.title === note.source) {\n    return <>{ authorText } { authors }</>;\n  }\n\n  return <>\n    { sourceFirst ? sourceText : authorText }\n    { \" \" }\n    { sourceFirst ? source : authors }\n    { (sourceFirst ? authorText : sourceText).startsWith(\",\") ? \"\" : \" \" }\n    { sourceFirst ? authorText : sourceText }\n    { \" \" }\n    { sourceFirst ? authors : source }\n  </>;\n}\n\nNoteByline.defaultProps = {\n  sourceFirst: false\n};\n\nNoteByline.propTypes = {\n  note: NotePropType.isRequired,\n  sourceText: PropTypes.node.isRequired,\n  authorText: PropTypes.node.isRequired,\n  sourceFirst: PropTypes.bool\n};\n\nfunction NoteSubheadText({ note }) {\n  if (note.media === LIVE_TALK_MEDIA) {\n    return <NoteByline note={ note } authorText=\"A talk by\" sourceText=\"I attended at\" />;\n  }\n\n  if (note.media === PODCAST_MEDIA) {\n    return <NoteByline note={ note } sourceText=\"From\" authorText=\", a podcast by\" sourceFirst />;\n  }\n\n  if (note.media === ARTICLE_MEDIA) {\n    return <NoteByline note={ note } authorText=\"An article by\" sourceText=\"from\" />;\n  }\n\n  if (note.media === OTHER_MEDIA) {\n    return <NoteByline note={ note } sourceText=\"From\" authorText=\"by\" sourceFirst />;\n  }\n\n  return <NoteByline\n    note={ note }\n    authorText={ `A ${ note.media.toLowerCase() } by` }\n    sourceText=\"from\"\n  />;\n}\n\nNoteSubheadText.propTypes = {\n  note: NotePropType.isRequired\n};\n\nexport function NoteHeader({ note }) {\n  return <Header\n    className=\"note-header\"\n    superText=\"My personal notes for\"\n    title={ note.title }\n    subText={ <NoteSubheadText note={ note } /> }\n    href={ note.url }\n  />;\n}\n\nNoteHeader.propTypes = {\n  note: NotePropType.isRequired\n};\n","import { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { NotePropType } from \"../data/prop-types\";\nimport { NoteHeader } from \"./note-header\";\n\nexport function Note({ note, content }) {\n  return <article className=\"note\" data-category={ note.category }>\n    <NoteHeader note={ note } />\n    <MDXRenderer>\n      { content }\n    </MDXRenderer>\n  </article>;\n}\n\nNote.propTypes = {\n  note: NotePropType.isRequired,\n  content: PropTypes.string.isRequired\n};\n","import { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { Layout } from \"../../components/layout\";\nimport { Note } from \"../../components/note\";\n\n// NOTE: I'm using $slug here instead of ID because the transformed note node is no longer tied to\n// the MDX node.\nexport const query = graphql`\n  query Note($slug: String) {\n    mdx(frontmatter: {Slug: {eq: $slug}}) {\n      body\n    }\n    note(slug: {eq: $slug}) {\n      authors\n      category\n      media\n      date\n      published\n      slug\n      source\n      title\n      url\n    }\n  }\n`;\n\nexport default function NotePage({ data }) {\n  return <Layout\n    title={ `Landon Schropp - Notes - ${ data.note.title }` }\n    description={ `My personal notes for ${ data.note.title }` }\n    category={ data.note.category }\n  >\n    <Note note={ data.note } content={ data.mdx.body } />\n  </Layout>;\n}\n\nNotePage.propTypes = {\n  data: PropTypes.object\n};\n"],"names":["NotePropType","PropTypes","title","slug","authors","isRequired","date","validateDateString","category","CATEGORIES","media","MEDIA","source","url","published","description","publisher","NoteByline","note","sourceText","authorText","sourceFirst","length","className","href","baseURL","Listify","items","startsWith","NoteSubheadText","LIVE_TALK_MEDIA","PODCAST_MEDIA","ARTICLE_MEDIA","OTHER_MEDIA","toLowerCase","NoteHeader","Header","superText","subText","Note","content","MDXRenderer","defaultProps","propTypes","NotePage","data","mdx","body"],"sourceRoot":""}