{
    "componentChunkName": "component---src-pages-notes-note-slug-jsx",
    "path": "/notes/how-http-2-works/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How HTTP/2 Works\",\n  \"Authors\": \"Aman Alam\",\n  \"Published\": true,\n  \"Media\": {\n    \"id\": \"}L@k\",\n    \"name\": \"Live Talk\",\n    \"color\": \"default\"\n  },\n  \"Slug\": \"how-http-2-works\",\n  \"Source\": \"DeveloperWeek 2019\",\n  \"Date\": {\n    \"start\": \"2019-02-20T00:00:00.000Z\",\n    \"end\": null,\n    \"time_zone\": null\n  },\n  \"Category\": {\n    \"id\": \"7c590fdc-8922-4760-8d45-5b3cf6f6b991\",\n    \"name\": \"Development\",\n    \"color\": \"default\"\n  },\n  \"Type\": {\n    \"type\": \"string\",\n    \"string\": \"Note\"\n  },\n  \"URL\": \"https://www.developerweek.com\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Three Main Problems With HTTP/1.1\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Performance: Doesn't use full bandwidth\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Complexity: Web applications have to optimize with multiple connections due to HTTP/1.1's lack of paralyzation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Efficiency: Optimizations create device and server resource consumption\")), mdx(\"h3\", null, \"Main Benefits of HTTP/2\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Speed: Improvements in actual and perceived latency.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Security: TLS is required by almost all browsers.\")), mdx(\"h3\", null, \"Features of HTTP/2\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Request multiplexing: Uses a single connection to do multiple requests simultaneously.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The client can indicate priorities of requests and resources, and the servers can provide those faster.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The TCP connection is maintained for multiple seconds after the last request before it's closed, so additional requests are fast.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"All data is binary. This means HTTP/2 is not backwards compatible.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Headers are optimized. Headers between requests are diffed so they're not repeated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Servers can push objects without an explicit request. The client then caches those objects.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTTP/2 keeps the semantics of HTTP/1.1.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The browses will take care of the optimizations for you with HTTP/2.\")), mdx(\"h3\", null, \"Major Problems With HTTP/2\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TCP is slow.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If packet loss rises above 2%, all HTTP/2 benefits are lost.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTTP/3 will solve these problems.\")), mdx(\"h3\", null, \"HTTP/2 on Backend Servers\"), mdx(\"p\", null, \"Use the latest backend server and it'll likely be available. All major servers currently support HTTP/2.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"ALPN: Application Level protocol Negotiation.\"), \" This is a way for the client and server to agree on a protocol.\"), mdx(\"p\", null, \"Side note: Protocol buffers are a GRPC construct that transmits data in a binary format that's an alternative to JSON. Most of the performance benefits come from this.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"note":{"authors":["Aman Alam"],"category":"Development","media":"Live Talk","date":"2019-02-20","published":true,"slug":"how-http-2-works","source":"DeveloperWeek 2019","title":"How HTTP/2 Works","url":"https://www.developerweek.com"}},"pageContext":{"id":"6cb77009-3b69-52e0-9373-e8e2b3781c43","slug":"how-http-2-works","__params":{"slug":"how-http-2-works"}}},
    "staticQueryHashes": []}