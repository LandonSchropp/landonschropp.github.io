{
    "componentChunkName": "component---src-templates-note-template-jsx",
    "path": "/notes/webassembly",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"WebAssembly\",\n  \"Authors\": \"Cody Owens\",\n  \"Published\": true,\n  \"Media\": {\n    \"id\": \"}L@k\",\n    \"name\": \"Live Talk\",\n    \"color\": \"default\"\n  },\n  \"Slug\": \"webassembly\",\n  \"Source\": \"DeveloperWeek 2019\",\n  \"Date\": {\n    \"start\": \"2019-02-22T00:00:00.000Z\",\n    \"end\": null,\n    \"time_zone\": null\n  },\n  \"Category\": {\n    \"id\": \"7c590fdc-8922-4760-8d45-5b3cf6f6b991\",\n    \"name\": \"Development\",\n    \"color\": \"default\"\n  },\n  \"Type\": {\n    \"type\": \"string\",\n    \"string\": \"Note\"\n  },\n  \"URL\": \"https://www.developerweek.com\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"WebAssembly is supported on all major browsers as of November 2017. Node 8+ also supports WebAssembly.\"), mdx(\"p\", null, \"This enabled new kinds of real-time work in the browser.\"), mdx(\"p\", null, \"You'll pay a performance penalty if you switch back and forth between WebAssembly and JavaScript a lot.\"), mdx(\"p\", null, \"WebAssembly also elegantly handles crashes and errors. It treats them like a standard console error.\"), mdx(\"h3\", null, \"How It Works\"), mdx(\"p\", null, \"Under the hood, WebAssembly memory is just a JavaScript ArrayBuffer. This means you can poke around with the memory directly from JavaScript. This also helps isolate application memory, because the process can't exit the array buffer.\"), mdx(\"p\", null, \"There is no file system with WebAssembly. However, there's a tool called Emscripten, which is a virtual Unit-like file system API.\"), mdx(\"p\", null, \"You can use WASM inside of web workers to offload CPU-intensive tasks to prevent blocking the UI. For now, Emscripten will do this automatically for you.\"), mdx(\"h3\", null, \"Porting Existing Libraries\"), mdx(\"p\", null, \"What's most exciting is you can take existing libraries from other languages and compile them to work in the browser. This allows you to incorporate libraries from other languages without much effort.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"note":{"authors":["Cody Owens"],"category":"Development","media":"Live Talk","date":"2019-02-22","published":true,"slug":"webassembly","source":"DeveloperWeek 2019","title":"WebAssembly","url":"https://www.developerweek.com"}},"pageContext":{"slug":"webassembly"}},
    "staticQueryHashes": []}