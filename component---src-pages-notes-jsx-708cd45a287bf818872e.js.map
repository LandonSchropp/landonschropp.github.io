{"version":3,"file":"component---src-pages-notes-jsx-708cd45a287bf818872e.js","mappings":"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","sources":["webpack://landonschropp.com/./src/data/prop-types.js","webpack://landonschropp.com/./src/components/note-summary.jsx","webpack://landonschropp.com/./src/components/tag.jsx","webpack://landonschropp.com/./src/pages/notes.jsx"],"sourcesContent":["import { validateDateString } from \"landon-schropp-gatsby-theme\";\nimport PropTypes from \"prop-types\";\n\nimport { CATEGORIES, MEDIA } from \"./constants\";\n\nexport const NotePropType = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  authors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  date: validateDateString,\n  category: PropTypes.oneOf(CATEGORIES),\n  media: PropTypes.oneOf(MEDIA),\n  source: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  published: PropTypes.bool.isRequired\n});\n\nexport const ArticlePropType = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  date: validateDateString,\n  description: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  publisher: PropTypes.string,\n  published: PropTypes.bool.isRequired\n});\n","import { Link } from \"gatsby\";\nimport { Listify } from \"landon-schropp-gatsby-theme\";\nimport React from \"react\";\n\nimport { NotePropType } from \"../data/prop-types\";\n\nexport function NoteSummary({ note }) {\n\n  return <Link\n    className=\"note-summary\"\n    to={ `/notes/${ note.slug }` }\n    data-category={ note.category }\n  >\n    <h3 className=\"note-summary__title\">\n      { note.title }\n    </h3>\n    <p className=\"note-summary__about\">\n      <span className=\"note-summary__authors\">\n        <Listify items={ note.authors } />\n      </span>\n      { \" \" }\n      <span className=\"note-summary__separator\">âˆ™</span>\n      { \" \" }\n      <span className=\"note-summary__source\">\n        { note.source }\n      </span>\n    </p>\n  </Link>;\n}\n\nNoteSummary.propTypes = {\n  note: NotePropType.isRequired\n};\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport function Tag({ category, onClick, selected }) {\n  return <button\n    type=\"button\"\n    className={ classNames(\"tag\", { \"tag--selected\": selected }) }\n    data-category={ category }\n    onClick={ onClick }\n    role=\"switch\"\n    aria-checked={ selected }\n  >\n    { category }\n  </button>;\n}\n\nTag.propTypes = {\n  category: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired\n};\n","import { useLocation } from \"@reach/router\";\nimport { graphql, navigate } from \"gatsby\";\nimport { Header } from \"landon-schropp-gatsby-theme\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Layout } from \"../components/layout\";\nimport { NoteSummary } from \"../components/note-summary\";\nimport { Tag } from \"../components/tag\";\nimport {\n  BUSINESS_CATEGORY,\n  DESIGN_CATEGORY,\n  DEVELOPMENT_CATEGORY,\n  OTHER_CATEGORY,\n  PSYCHOLOGY_CATEGORY\n} from \"../data/constants\";\n\nexport const query = graphql`\n  query Notes {\n    allNote(sort: {fields: [date], order: DESC}) {\n      nodes {\n        authors\n        category\n        media\n        date\n        published\n        slug\n        source\n        title\n        url\n      }\n    }\n  }\n`;\n\nexport default function NotesPage({ data }) {\n\n  const { href } = useLocation();\n  let [ category, setCategory ] = useState(null);\n\n  // If the URL contains a category, remove it and store it in the state.\n  useEffect(() => {\n    const url = new URL(href);\n\n    if (url.searchParams.has(\"category\")) {\n      setCategory(url.searchParams.get(\"category\"));\n      url.searchParams.delete(\"category\");\n      navigate(`${ url.pathname }${ url.search }${ url.hash }`, { replace: true });\n    }\n  }, [ href ]);\n\n  // Filter the notes if a category is selected.\n  // NOTE: I'm using includes here to accomodate the `Live Talk` category, which should be included\n  // by `Talk`.\n  let notes = _.isNil(category)\n    ? data.allNote.nodes\n    : data.allNote.nodes.filter(article => article.category.includes(category));\n\n  // TODO: Remove this once the example post is removed.\n  notes = notes.filter(note => note.title !== \"Example\");\n\n  function toggleCategory(updatedCategory) {\n    setCategory(category === updatedCategory ? null : updatedCategory);\n  }\n\n  return <Layout\n    title=\"Landon Schropp - Notes\"\n    description=\"My personal notes on blog posts, talks, podcasts and books.\"\n  >\n    <Header\n      title=\"Notes\"\n      subText=\"This is my personal collection of notes on entrepreneurship, development and design.\"\n    >\n      <div className=\"note-header__tags\">\n        <span className=\"note-header__tag-group\">\n          <Tag\n            category={ BUSINESS_CATEGORY }\n            onClick={ () => toggleCategory(BUSINESS_CATEGORY) }\n            selected={ category === BUSINESS_CATEGORY }\n          />\n          <Tag\n            category={ DEVELOPMENT_CATEGORY }\n            onClick={ () => toggleCategory(DEVELOPMENT_CATEGORY) }\n            selected={ category === DEVELOPMENT_CATEGORY }\n          />\n          <Tag\n            category={ DESIGN_CATEGORY }\n            onClick={ () => toggleCategory(DESIGN_CATEGORY) }\n            selected={ category === DESIGN_CATEGORY }\n          />\n        </span>\n        <span className=\"note-header__tag-group\">\n          <Tag\n            category={ PSYCHOLOGY_CATEGORY }\n            onClick={ () => toggleCategory(PSYCHOLOGY_CATEGORY) }\n            selected={ category === PSYCHOLOGY_CATEGORY }\n          />\n          <Tag\n            category={ OTHER_CATEGORY }\n            onClick={ () => toggleCategory(OTHER_CATEGORY) }\n            selected={ category === OTHER_CATEGORY }\n          />\n        </span>\n      </div>\n    </Header>\n\n    <section className=\"note-summaries\">\n      { notes.map(note => <NoteSummary key={ note.slug } note={ note } />) }\n    </section>\n  </Layout>;\n}\n\nNotesPage.propTypes = {\n  data: PropTypes.object\n};\n"],"names":["NotePropType","PropTypes","title","slug","authors","isRequired","date","validateDateString","category","CATEGORIES","media","MEDIA","source","url","published","description","publisher","NoteSummary","note","Link","className","to","Listify","items","Tag","onClick","selected","type","classNames","role","NotesPage","data","href","useLocation","setCategory","useState","useEffect","URL","searchParams","has","get","delete","navigate","pathname","search","hash","replace","notes","allNote","nodes","filter","article","includes","toggleCategory","updatedCategory","Header","subText","BUSINESS_CATEGORY","DEVELOPMENT_CATEGORY","DESIGN_CATEGORY","PSYCHOLOGY_CATEGORY","OTHER_CATEGORY","map","key"],"sourceRoot":""}