{"version":3,"file":"component---src-pages-notes-index-jsx-2e2cc8bae2eb7669624b.js","mappings":"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","sources":["webpack://landonschropp.com/./src/components/listify.jsx","webpack://landonschropp.com/./src/data/constants.js","webpack://landonschropp.com/./src/data/prop-types.js","webpack://landonschropp.com/./src/components/note-summary.jsx","webpack://landonschropp.com/./src/components/tag.jsx","webpack://landonschropp.com/./src/pages/notes/index.jsx","webpack://landonschropp.com/./node_modules/lodash/_baseSlice.js","webpack://landonschropp.com/./node_modules/lodash/initial.js","webpack://landonschropp.com/./node_modules/lodash/last.js"],"sourcesContent":["import _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nfunction intersperse(array, separator) {\n  return array.reduce((accumulator, item, index) => {\n    accumulator.push(item);\n\n    if (index !== array.length - 1) {\n      accumulator.push(separator);\n    }\n\n    return accumulator;\n  }, []);\n}\n\nexport function Listify({ items }) {\n  if (items.length === 0) {\n    return null;\n  }\n\n  if (items.length === 1) {\n    return items[0];\n  }\n\n  return [\n    ...intersperse(_.initial(items), \", \"),\n    \" and \",\n    _.last(items)\n  ];\n}\n\nListify.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.node).isRequired\n};\n","export const ARTICLE_CATEGORY = \"Article\";\nexport const BOOK_CATEGORY = \"Book\";\nexport const LIVE_TALK_CATEGORY = \"Live Talk\";\nexport const OTHER_CATEGORY = \"Other\";\nexport const PODCAST_CATEGORY = \"Podcast\";\nexport const TALK_CATEGORY = \"Talk\";\nexport const VIDEO_CATEGORY = \"Video\";\n\nexport const CATEGORIES = [\n  ARTICLE_CATEGORY,\n  BOOK_CATEGORY,\n  LIVE_TALK_CATEGORY,\n  OTHER_CATEGORY,\n  PODCAST_CATEGORY,\n  TALK_CATEGORY,\n  VIDEO_CATEGORY\n];\n","import PropTypes from \"prop-types\";\n\nimport { CATEGORIES } from \"./constants\";\n\nfunction validateDateString(props, propName) {\n  if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(props[propName])) {\n    return new Error(\n      `${ propName }'s value '${ props[propName] }' is not a valid ISO date string ('YYYY-MM-DD').`\n    );\n  }\n}\n\nexport const NotePropType = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  authors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  date: validateDateString,\n  category: PropTypes.oneOf(CATEGORIES),\n  source: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  published: PropTypes.bool.isRequired\n});\n","import { Link } from \"gatsby\";\nimport React from \"react\";\n\nimport { Listify } from \"../components/listify\";\nimport { NotePropType } from \"../data/prop-types\";\n\nexport function NoteSummary({ note }) {\n\n  return <Link\n    className=\"note-summary\"\n    to={ `/notes/${ note.slug }` }\n    data-category={ note.category }\n  >\n    <h3 className=\"note-summary__title\">\n      { note.title }\n    </h3>\n    <p className=\"note-summary__about\">\n      <span className=\"note-summary__authors\">\n        <Listify items={ note.authors } />\n      </span>\n      <span className=\"note-summary__separator\">âˆ™</span>\n      <span className=\"note-summary__source\">\n        { note.sourceName }\n      </span>\n    </p>\n  </Link>;\n}\n\nNoteSummary.propTypes = {\n  note: NotePropType.isRequired\n};\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport function Tag({ category }) {\n  return <Link className=\"tag\" to={ `/notes/?category=${ category }` } data-category={ category }>\n    { category }\n  </Link>;\n}\n\nTag.propTypes = {\n  category: PropTypes.string.isRequired\n};\n","import { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport { NoteSummary } from \"../../components/note-summary\";\nimport { Tag } from \"../../components/tag\";\nimport {\n  ARTICLE_CATEGORY,\n  BOOK_CATEGORY,\n  PODCAST_CATEGORY,\n  TALK_CATEGORY,\n  VIDEO_CATEGORY\n} from \"../../data/constants\";\nimport { Layout } from \"../../layout/layout\";\n\nexport const query = graphql`\n  query Notes {\n    allNote {\n      nodes {\n        authors\n        category\n        date\n        published\n        slug\n        source\n        title\n        url\n      }\n    }\n  }\n`;\n\nexport default function NotesPage({ data }) {\n  let notes = data.allNote.nodes;\n\n  return <Layout\n    title=\"Landon Schropp - Notes\"\n    description=\"My personal notes on blog posts, talks, podcasts and books.\"\n  >\n\n    <header className=\"header\">\n      <h1 className=\"header__header\">\n        Notes\n      </h1>\n\n      <p className=\"header__subhead\">\n        This is my personal collection of notes on entrepreneurship, development and design.\n      </p>\n\n      <div className=\"header__tags\">\n        <span className=\"header__tag-group\">\n          <Tag category={ ARTICLE_CATEGORY } />\n          <Tag category={ BOOK_CATEGORY } />\n          <Tag category={ VIDEO_CATEGORY } />\n        </span>\n        <span className=\"header__tag-group\">\n          <Tag category={ TALK_CATEGORY } />\n          <Tag category={ PODCAST_CATEGORY } />\n        </span>\n      </div>\n    </header>\n\n    <section className=\"note-summaries\">\n      { notes.map(note => <NoteSummary key={ note.slug } note={ note } />) }\n    </section>\n  </Layout>;\n}\n\nNotesPage.propTypes = {\n  data: PropTypes.object\n};\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Gets all but the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.initial([1, 2, 3]);\n * // => [1, 2]\n */\nfunction initial(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseSlice(array, 0, -1) : [];\n}\n\nmodule.exports = initial;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n"],"names":["Listify","items","length","array","separator","reduce","accumulator","item","index","push","propTypes","PropTypes","isRequired","ARTICLE_CATEGORY","BOOK_CATEGORY","PODCAST_CATEGORY","TALK_CATEGORY","VIDEO_CATEGORY","CATEGORIES","title","slug","authors","date","props","propName","test","Error","category","source","url","published","NoteSummary","note","Link","className","to","sourceName","Tag","NotesPage","data","notes","allNote","nodes","description","map","key","module","exports","start","end","result","Array","baseSlice","undefined"],"sourceRoot":""}