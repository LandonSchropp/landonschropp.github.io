1:"$Sreact.fragment"
2:I[9928,[],""]
3:I[1054,[],""]
4:I[383,["458","static/chunks/458-d936935f6de7c2f9.js","763","static/chunks/app/notes/layout-b12473e1ad399ce3.js"],"MainNavigation"]
5:"$Sreact.suspense"
7:I[9209,[],"OutletBoundary"]
9:I[9209,[],"MetadataBoundary"]
b:I[9209,[],"ViewportBoundary"]
d:I[4455,[],""]
:HL["/_next/static/css/d40ab0564747cb66.css","style"]
:HL["/_next/static/css/5aabacac4a7bcbc4.css","style"]
:HL["/_next/static/css/b7bdc2d4d4aa6554.css","style"]
:HL["/_next/static/css/9cad1c3a621a47c7.css","style"]
:HL["/_next/static/css/34f92507e61baad2.css","style"]
0:{"P":null,"b":"rJvg0KUuQj6HUJizNv5yz","p":"","c":["","notes","database-normalization"],"i":false,"f":[[["",{"children":["notes",{"children":[["slug","database-normalization","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d40ab0564747cb66.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en-us","className":"h-full text-[19px] md:text-[21px] lg:text-[22px]","children":[["$","head",null,{"children":[["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com","crossOrigin":"anonymous"}],["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Gentium+Book+Plus:ital,wght@0,400;0,700;1,400;1,700&family=Open+Sans:ital,wght@0,400;0,700;0,800;1,400;1,700;1,800&family=Source+Code+Pro:ital,wght@0,400;0,700;1,400;1,700&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"shortcut icon","type":"image/png","href":"/_next/static/media/flannel.5168cfc2.png"}]]}],["$","body",null,{"className":"flex h-full flex-col bg-theme-background font-serif font-normal text-theme-text *:flex-[0_0_auto]","children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],null],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":["notes",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5aabacac4a7bcbc4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/b7bdc2d4d4aa6554.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/9cad1c3a621a47c7.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/34f92507e61baad2.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],[["$","$L4",null,{}],["$","main",null,{"className":"mx-auto w-[70ch] max-w-full px-2 md:px-4","children":["$","$5",null,{"children":["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","notes","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]]}],{"children":[["slug","database-normalization","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","segmentPath":["children","notes","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L6",null,["$","$L7",null,{"children":"$L8"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","nTCNYMMgzsak7ysTbjcVn",{"children":[["$","$L9",null,{"children":"$La"}],["$","$Lb",null,{"children":"$Lc"}],null]}]]}],false]],"m":"$undefined","G":["$d","$undefined"],"s":false,"S":true}
c:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:I[3176,["794","static/chunks/794-3921d1a8df069f9c.js","740","static/chunks/app/notes/%5Bslug%5D/page-d0c2f0b3305d5fd0.js"],"Note"]
f:T1136,> _Normalization_ is a technique of organizing data into multiple, related tables to minimize _data redundancy._

Data redundancy is the representation of data in multiple places. This has many drawbacks:

- **Size:** Redundant data takes up extra space.
- **Insertion anomaly:** When inserting duplicate data, you create data redundancies.
- **Updation anomaly:** If you need to update duplicated data, you must do so in all the places where it’s referenced. “If even a single row is left out, it will lead to inconsistent data.”
- **Deletion anomaly:** If we delete all instances of the redundant data in our database, we can unintentionally delete the associated context as well. When data exists in columns that belong in a separate table, there’s no way for us to represent the case where there are 0 records.

Normalization solves these problems. The goal is to create _logical_, _independent_, but _related_ data.

There are three basic normal forms and one bonus form. Each form requires the previous forms as prerequisites.

## **First Normal Form (1NF)**

This form aims to design your table _scalably_ so it can be easily extended. This form has four rules:

1. Each column should contain atomic values. _An atomic value is a value that cannot be divided_. In other words, the column value represent a single value and not multiple values.
2. Every value in a column should have the same type.
3. Each column should have a unique name. (Is it even possible to break this rule?)
4. The order in which you store your data doesn’t matter.

## **Second Normal Form (2NF)**

“There should be no _partial dependency_ in the data.” No attribute should depend on only _part_ of the primary key. In other words, a non-prime attribute depends on a _part_ of the primary key.

More formally, a table has a composite key `ABC`, and there’s a column `D` that’s only dependent on `A`, then the table has a partial dependency. Don’t do this!

By definition, violations of second normal form can’t occur when a table only uses a single column for its primary key. It often creeps up when a column only depends on _one_ of the columns in the key.

### Example

The following table is a violation of Second Normal Form.

| Student ID | Course ID | Instructor Name |
| ---------- | --------- | --------------- |
| 1          | CS101     | Smith           |
| 1          | CS102     | Johnson         |
| 2          | CS101     | Smith           |

In this example, the table has a composite primary key of **Student ID** and **Course ID**. However, **Instructor Name** depends only on **Course ID** and not **Student ID**.

## **Third Normal Form (3NF)**

Columns can not have _transitive dependencies_. This occurs when an attribute in the table depends on a non-primary key. In other words, a non-prime attribute depends on a non-prime attribute.

Formally, if a table has a column `B` that’s dependent on `A`, and both are not prime attributes, then the table has a transitive dependency. If `B` depends on `A`, then `A` must be a primary key.

### Example

A good example of a violation of Third Normal Form comes from the [Third Normal Form](https://en.wikipedia.org/wiki/Third_normal_form) Wikipedia article.

| Tournament           | Year | Winner         | Winner’s Date of Birth |
| -------------------- | ---- | -------------- | ---------------------- |
| Indiana Invitational | 1998 | Al Fredrickson | 21 July 1975           |
| Cleveland Open       | 1999 | Bob Albertson  | 28 September 1968      |
| Des Moines Masters   | 1999 | Al Fredrickson | 21 July 1975           |
| Indiana Invitational | 1999 | Chip Masterson | 14 March 1977          |

> The breach of 3NF occurs because the non-prime attribute (Winner's date of birth) is transitively dependent on the candidate key {Tournament, Year} through the non-prime attribute Winner. The fact that Winner's date of birth is functionally dependent on Winner makes the table vulnerable to logical inconsistencies, as there is nothing to stop the same person from being shown with different dates of birth on different records.

## **BCNF (Boyce-Codd Normal Form)**

The violation of this normal form occurs when a _prime attribute_ depends on a _non-prime attribute._ For any columnar dependency `B` that depends on `A`, `A` should be a _super key_ (a primary key).

This can be considered an upgrade to Third Normal Form.6:["$","$Le",null,{"note":{"title":"Database Normalization","slug":"database-normalization","date":"2022-02-18","published":true,"markdown":"$f","filePath":"/Users/landon/Notes/Resources/Notes/Development/Database Normalization.md","authors":[],"category":"Development","media":"Video","url":"https://www.youtube.com/playlist?list=PLLGlmW7jT-nTr1ory9o2MgsOmmx2w8FB3","source":"Studytonight"}}]
a:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Landon Schropp – Database Normalization"}],["$","meta","2",{"name":"description","content":"Landon Schropp's notes about Database Normalization"}],["$","meta","3",{"name":"author","content":"Landon Schropp"}]]
8:null
